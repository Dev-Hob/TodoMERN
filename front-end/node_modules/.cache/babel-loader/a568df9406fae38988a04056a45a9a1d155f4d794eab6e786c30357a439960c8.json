{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\TODO MERN Stack\\\\TodoMERN\\\\front-end\\\\src\\\\components\\\\card-list\\\\card-list.component.jsx\",\n  _s = $RefreshSig$();\nimport { SimpleGrid } from \"@chakra-ui/react\";\nimport React, { memo, useCallback, useContext } from \"react\";\nimport CardTodoComponent from \"../card-todo/card-todo.component\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TodoContext } from \"../../context/todo\";\nimport instance from \"../../utils/axios.instance\";\nimport { useToast } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardList({\n  todos\n}) {\n  _s();\n  const navigate = useNavigate();\n  const toast = useToast();\n  const {\n    dispatch\n  } = useContext(TodoContext);\n  const editTodoHandler = useCallback(id => {\n    // goto edit page with todo id\n    navigate(\"/todo/edit\", {\n      state: {\n        _id: id\n      }\n    });\n  }, []);\n  const deleteTodoHandler = useCallback(async (id, name) => {\n    console.log(`id : ${id}   &  name  ${name}`);\n    // const oldTodos = todos;\n    const newTodos = todos.filter(({\n      _id\n    }) => _id !== id);\n    // dispatch({type: \"SET_TODOS\", payload: newTodos})\n    // try{\n    //   await instance({\n    //     url: `/todo/delete/${id}`,\n    //     method: 'delete',\n    //   })\n    //   toast({\n    //     title: `Deleted!`,\n    //     description: `Deleted Todo by name ${name}.`,\n    //     status: 'success',\n    //     duration: 5000,\n    //     isClosable: true,\n    //   })\n    // } catch(err) {\n    //   toast({\n    //     title: `Unsuccessful!`,\n    //     description: `Todo by name ${name} was not deleted.`,\n    //     status: 'error',\n    //     duration: 5000,\n    //     isClosable: true,\n    //   })\n    //\n    // }\n    // goto edit page with todo id\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SimpleGrid, {\n    columns: 3,\n    minChildWidth: \"280px\",\n    spacing: 10,\n    mt: \"100px\",\n    children: todos && (todos === null || todos === void 0 ? void 0 : todos.length) !== 0 && (todos === null || todos === void 0 ? void 0 : todos.map(({\n      name,\n      description,\n      _id\n    }) => /*#__PURE__*/_jsxDEV(CardTodoComponent, {\n      name: name,\n      description: description,\n      _id: _id,\n      editHandler: editTodoHandler,\n      deleteHandler: deleteTodoHandler\n    }, _id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(CardList, \"Pt2SMpfpHcU0A4dcLUIRwfvvtpE=\", false, function () {\n  return [useNavigate, useToast];\n});\n_c = CardList;\nexport default _c2 = /*#__PURE__*/memo(CardList);\nvar _c, _c2;\n$RefreshReg$(_c, \"CardList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["SimpleGrid","React","memo","useCallback","useContext","CardTodoComponent","useNavigate","TodoContext","instance","useToast","jsxDEV","_jsxDEV","CardList","todos","_s","navigate","toast","dispatch","editTodoHandler","id","state","_id","deleteTodoHandler","name","console","log","newTodos","filter","columns","minChildWidth","spacing","mt","children","length","map","description","editHandler","deleteHandler","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/TODO MERN Stack/TodoMERN/front-end/src/components/card-list/card-list.component.jsx"],"sourcesContent":["import { SimpleGrid } from \"@chakra-ui/react\";\r\nimport React, { memo, useCallback, useContext } from \"react\";\r\nimport CardTodoComponent from \"../card-todo/card-todo.component\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { TodoContext } from \"../../context/todo\";\r\nimport instance from \"../../utils/axios.instance\";\r\nimport { useToast } from '@chakra-ui/react'\r\n\r\nfunction CardList({todos}) {\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n  const { dispatch } = useContext(TodoContext);\r\n\r\n  const editTodoHandler = useCallback((id) => {\r\n    // goto edit page with todo id\r\n    navigate(\"/todo/edit\", { state: {_id: id} });\r\n  }, []);\r\n\r\n  const deleteTodoHandler = useCallback(async (id, name) => {\r\n    console.log(`id : ${id}   &  name  ${name}`)\r\n    // const oldTodos = todos;\r\n    const newTodos = todos.filter( ({_id}) => _id !== id);\r\n    // dispatch({type: \"SET_TODOS\", payload: newTodos})\r\n    // try{\r\n    //   await instance({\r\n    //     url: `/todo/delete/${id}`,\r\n    //     method: 'delete',\r\n    //   })\r\n    //   toast({\r\n    //     title: `Deleted!`,\r\n    //     description: `Deleted Todo by name ${name}.`,\r\n    //     status: 'success',\r\n    //     duration: 5000,\r\n    //     isClosable: true,\r\n    //   })\r\n    // } catch(err) {\r\n    //   toast({\r\n    //     title: `Unsuccessful!`,\r\n    //     description: `Todo by name ${name} was not deleted.`,\r\n    //     status: 'error',\r\n    //     duration: 5000,\r\n    //     isClosable: true,\r\n    //   })\r\n    //\r\n    // }\r\n    // goto edit page with todo id\r\n  }, []);\r\n\r\n  return (\r\n    <SimpleGrid\r\n      columns={3}\r\n      minChildWidth={\"280px\"}\r\n      spacing={10}\r\n      mt={\"100px\"}\r\n    >\r\n      {todos &&\r\n        todos?.length !== 0 &&\r\n        todos?.map(({ name, description, _id }) => (\r\n          <CardTodoComponent\r\n            key={_id}\r\n            name={name}\r\n            description={description}\r\n            _id={_id}\r\n            editHandler={editTodoHandler}\r\n            deleteHandler={deleteTodoHandler}\r\n          />\r\n        ))}\r\n    </SimpleGrid>\r\n  );\r\n}\r\n\r\nexport default memo(CardList);\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,KAAK,IAAIC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAC5D,OAAOC,iBAAiB,MAAM,kCAAkC;AAChE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,SAASC,QAAQ,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAC;EAACC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,KAAK,GAAGP,QAAQ,CAAC,CAAC;EACxB,MAAM;IAAEQ;EAAS,CAAC,GAAGb,UAAU,CAACG,WAAW,CAAC;EAE5C,MAAMW,eAAe,GAAGf,WAAW,CAAEgB,EAAE,IAAK;IAC1C;IACAJ,QAAQ,CAAC,YAAY,EAAE;MAAEK,KAAK,EAAE;QAACC,GAAG,EAAEF;MAAE;IAAE,CAAC,CAAC;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,iBAAiB,GAAGnB,WAAW,CAAC,OAAOgB,EAAE,EAAEI,IAAI,KAAK;IACxDC,OAAO,CAACC,GAAG,CAAE,QAAON,EAAG,eAAcI,IAAK,EAAC,CAAC;IAC5C;IACA,MAAMG,QAAQ,GAAGb,KAAK,CAACc,MAAM,CAAE,CAAC;MAACN;IAAG,CAAC,KAAKA,GAAG,KAAKF,EAAE,CAAC;IACrD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACX,UAAU;IACT4B,OAAO,EAAE,CAAE;IACXC,aAAa,EAAE,OAAQ;IACvBC,OAAO,EAAE,EAAG;IACZC,EAAE,EAAE,OAAQ;IAAAC,QAAA,EAEXnB,KAAK,IACJ,CAAAA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEoB,MAAM,MAAK,CAAC,KACnBpB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEqB,GAAG,CAAC,CAAC;MAAEX,IAAI;MAAEY,WAAW;MAAEd;IAAI,CAAC,kBACpCV,OAAA,CAACN,iBAAiB;MAEhBkB,IAAI,EAAEA,IAAK;MACXY,WAAW,EAAEA,WAAY;MACzBd,GAAG,EAAEA,GAAI;MACTe,WAAW,EAAElB,eAAgB;MAC7BmB,aAAa,EAAEf;IAAkB,GAL5BD,GAAG;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMT,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEjB;AAAC3B,EAAA,CA7DQF,QAAQ;EAAA,QACEN,WAAW,EACdG,QAAQ;AAAA;AAAAiC,EAAA,GAFf9B,QAAQ;AA+DjB,eAAA+B,GAAA,gBAAezC,IAAI,CAACU,QAAQ,CAAC;AAAC,IAAA8B,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}