{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ToDoList\\\\to-do-frontend\\\\src\\\\components\\\\edit-todo-form\\\\edit-todo-form.component.jsx\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport useFetch from \"../../hooks/useFetch.hook\";\nimport { Button, FormControl, FormLabel, Input, Textarea, useToast } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport instance from \"../../utils/axios.instance\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTodoForm({}) {\n  _s();\n  const {\n    state\n  } = useLocation();\n  console.log(state);\n  const {\n    _id\n  } = state;\n  const navigate = useNavigate();\n  const toast = useToast();\n  const {\n    data,\n    loading,\n    error,\n    retry\n  } = useFetch(`/todo/${_id}`, \"get\");\n  const [formFields, setFormFields] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const {\n    name,\n    description\n  } = formFields;\n  useEffect(() => {\n    if (data && data !== null && data !== void 0 && data.todo) {\n      setFormFields({\n        name: data.todo.name,\n        description: data.todo.description\n      });\n    }\n  }, [data]);\n  const updateTodoHandler = async () => {\n    try {\n      await instance({\n        url: \"/todo/update\",\n        method: \"patch\",\n        data: {\n          _id,\n          ...formFields\n        }\n      });\n      toast({\n        title: \"Update!\",\n        description: `Todo ${name} updated successfully.`,\n        status: \"success\",\n        duration: 1000,\n        isClosable: true\n      });\n      setTimeout(() => {\n        navigate(\"/todo\");\n      }, 1000);\n    } catch (error) {\n      toast({\n        title: \"Update Failed!\",\n        description: `Todo ${name} failed to update.`,\n        status: \"error\",\n        duration: 2000,\n        isClosable: true\n      });\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      children: \"description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      type: \"text\",\n      name: \"description\",\n      value: description,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      colorScheme: \"teal\",\n      onClick: updateTodoHandler,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 11\n  }, this);\n}\n_s(EditTodoForm, \"jmJT+I0GLCRaZESCMyHvHaHN/JA=\", false, function () {\n  return [useLocation, useNavigate, useToast, useFetch];\n});\n_c = EditTodoForm;\nvar _c;\n$RefreshReg$(_c, \"EditTodoForm\");","map":{"version":3,"names":["useLocation","useNavigate","useFetch","Button","FormControl","FormLabel","Input","Textarea","useToast","useEffect","useState","instance","jsxDEV","_jsxDEV","EditTodoForm","_s","state","console","log","_id","navigate","toast","data","loading","error","retry","formFields","setFormFields","name","description","todo","updateTodoHandler","url","method","title","status","duration","isClosable","setTimeout","handleInputChange","event","value","target","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","colorScheme","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ToDoList/to-do-frontend/src/components/edit-todo-form/edit-todo-form.component.jsx"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetch.hook\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Textarea,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport instance from \"../../utils/axios.instance\";\r\n\r\nexport default function EditTodoForm({}) {\r\n  const { state } = useLocation();\r\n  console.log(state)\r\n  const {_id} = state;\r\n  const navigate = useNavigate()\r\n  const toast = useToast();\r\n  const { data, loading, error, retry } = useFetch(`/todo/${_id}`, \"get\");\r\n  const [formFields, setFormFields] = useState({ name: \"\", description: \"\" });\r\n  const { name, description } = formFields;\r\n\r\n  useEffect(() => {\r\n    if (data && data?.todo) {\r\n      setFormFields({\r\n        name: data.todo.name,\r\n        description: data.todo.description,\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const updateTodoHandler = async () => {\r\n    try {\r\n      await instance({\r\n        url: \"/todo/update\",\r\n        method: \"patch\",\r\n        data: { _id, ...formFields },\r\n      });\r\n      toast({\r\n        title: \"Update!\",\r\n        description: `Todo ${name} updated successfully.`,\r\n        status: \"success\",\r\n        duration: 1000,\r\n        isClosable: true,\r\n      });\r\n      setTimeout(() => {\r\n        navigate(\"/todo\")\r\n      }, 1000)\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Update Failed!\",\r\n        description: `Todo ${name} failed to update.`,\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n          <FormControl>\r\n            <FormLabel>Name</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            />\r\n            <FormLabel>description</FormLabel>\r\n            <Textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Button colorScheme=\"teal\" onClick={updateTodoHandler}>\r\n              Update\r\n            </Button>\r\n          </FormControl>\r\n        )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}