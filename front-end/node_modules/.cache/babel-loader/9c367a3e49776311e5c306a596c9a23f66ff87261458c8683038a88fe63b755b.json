{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ToDoList\\\\to-do-frontend\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n  _s = $RefreshSig$();\nimport { FormControl, FormLabel, FormErrorMessage, FormHelperText, Input, Heading } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n  const [form, setform] = useState('');\n  const handleInputChange = e => setInput(e.target.value);\n  const isError = input === '';\n  return (\n    /*#__PURE__*/\n    //     <FormControl isInvalid={isError}>\n    //     <FormLabel>Email</FormLabel>\n    //     <Input type='email' value={input} onChange={handleInputChange} />\n    //     {!isError ? (\n    //       <FormHelperText>\n    //         Enter the email you'd like to receive the newsletter on.\n    //       </FormHelperText>\n    //     ) : (\n    //       <FormErrorMessage>Email is required.</FormErrorMessage>\n    //     )}\n    //   </FormControl>\n    _jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        mt: \"20px\",\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  );\n}\n_s(SignIn, \"Cd9/G9hHkrRIu4gze+VKVhhuR80=\");\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["FormControl","FormLabel","FormErrorMessage","FormHelperText","Input","Heading","useState","jsxDEV","_jsxDEV","SignIn","_s","form","setform","handleInputChange","e","setInput","target","value","isError","input","children","mt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ToDoList/to-do-frontend/src/components/sign-in/sign-in.component.jsx"],"sourcesContent":["import {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Input, Heading\r\n  } from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\n\r\nexport default function SignIn() {\r\n    const [form, setform] = useState('')\r\n\r\n    const handleInputChange = (e) => setInput(e.target.value)\r\n  \r\n    const isError = input === ''\r\n  return (\r\n//     <FormControl isInvalid={isError}>\r\n//     <FormLabel>Email</FormLabel>\r\n//     <Input type='email' value={input} onChange={handleInputChange} />\r\n//     {!isError ? (\r\n//       <FormHelperText>\r\n//         Enter the email you'd like to receive the newsletter on.\r\n//       </FormHelperText>\r\n//     ) : (\r\n//       <FormErrorMessage>Email is required.</FormErrorMessage>\r\n//     )}\r\n//   </FormControl>\r\n      <FormControl>\r\n        {//<Heading>Sign In</Heading>\r\n        }\r\n        <FormLabel mt='20px'>Email address</FormLabel>\r\n        <Input type='email'/>\r\n        <Heading>Sign In</Heading>\r\n        <Input type='text' placeholder='Username' />\r\n        <Input type='password' placeholder='Password' />\r\n    </FormControl>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SACIA,WAAW,EACXC,SAAS,EACTC,gBAAgB,EAChBC,cAAc,EACdC,KAAK,EAAEC,OAAO,QACT,kBAAkB;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,iBAAiB,GAAIC,CAAC,IAAKC,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAEzD,MAAMC,OAAO,GAAGC,KAAK,KAAK,EAAE;EAC9B;IAAA;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACMX,OAAA,CAACR,WAAW;MAAAoB,QAAA,gBAGVZ,OAAA,CAACP,SAAS;QAACoB,EAAE,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC9CjB,OAAA,CAACJ,KAAK;QAACsB,IAAI,EAAC;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACrBjB,OAAA,CAACH,OAAO;QAAAe,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC1BjB,OAAA,CAACJ,KAAK;QAACsB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CjB,OAAA,CAACJ,KAAK;QAACsB,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;AAElB;AAACf,EAAA,CA5BuBD,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}