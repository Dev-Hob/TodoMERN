{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ToDoList\\\\to-do-frontend\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\",\n  _s = $RefreshSig$();\nimport { FormControl, FormLabel, FormErrorMessage, FormHelperText, Input, Heading, Button } from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  username: '',\n  password: ''\n};\nexport default function SignIn() {\n  _s();\n  const [formFields, setFormFields] = useState('');\n  const {\n    username,\n    password\n  } = formFields;\n  const onChangeHandler = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n  };\n  const isError = username === '' || password === \"\";\n  return (\n    /*#__PURE__*/\n    // <FormControl isInvalid={isError}>\n    // <FormLabel>Email</FormLabel>\n    // <Input type='email' value={input} onChange={handleInputChange} />\n    // {!isError ? (\n    //   <FormHelperText>\n    //     Enter the email you'd like to receive the newsletter on.\n    //   </FormHelperText>\n    // ) : (\n    //   <FormErrorMessage>Email is required.</FormErrorMessage>\n    // )}\n    //   </FormControl>\n    _jsxDEV(VStack, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        width: '400px',\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          mt: \"20px\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"username\",\n          value: username,\n          onChange: onChangeHandler,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          mt: \"20px\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: onChangeHandler,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          size: \"md\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(SignIn, \"tMMptuE+A0atzieLEUtSZk34qNM=\");\n_c = SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["FormControl","FormLabel","FormErrorMessage","FormHelperText","Input","Heading","Button","useState","jsxDEV","_jsxDEV","INITIAL_STATE","username","password","SignIn","_s","formFields","setFormFields","onChangeHandler","e","name","target","value","isError","VStack","children","width","size","fileName","_jsxFileName","lineNumber","columnNumber","mt","type","onChange","required","colorScheme","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ToDoList/to-do-frontend/src/components/sign-in/sign-in.component.jsx"],"sourcesContent":["import {\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n    Input, Heading, Button\r\n  } from '@chakra-ui/react'\r\nimport { useState } from 'react'\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    password: '',\r\n}\r\n\r\nexport default function SignIn() {\r\n    const [formFields, setFormFields] = useState('')\r\n    const {username, password} = formFields;\r\n\r\n    const onChangeHandler = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setFormFields({...formFields, [name]: value})\r\n    } \r\n  \r\n    const isError = (username === '' || password === \"\");\r\n  return (\r\n    // <FormControl isInvalid={isError}>\r\n    // <FormLabel>Email</FormLabel>\r\n    // <Input type='email' value={input} onChange={handleInputChange} />\r\n    // {!isError ? (\r\n    //   <FormHelperText>\r\n    //     Enter the email you'd like to receive the newsletter on.\r\n    //   </FormHelperText>\r\n    // ) : (\r\n    //   <FormErrorMessage>Email is required.</FormErrorMessage>\r\n    // )}\r\n//   </FormControl>\r\n    <VStack >\r\n    <FormControl width={'400px'}>\r\n    <Heading size={\"lg\"}>Sign In</Heading>\r\n    <FormLabel mt='20px'>Username</FormLabel>\r\n    <Input type='text' name=\"username\" value={username} onChange={onChangeHandler} required/>\r\n    <FormLabel mt='20px'>Password</FormLabel>\r\n    <Input type='password' name=\"password\" value={password} onChange={onChangeHandler} required/>\r\n    <Button colorScheme='teal' size='md'>\r\n    Sign In\r\n    </Button>\r\n    </FormControl>\r\n    </VStack>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SACIA,WAAW,EACXC,SAAS,EACTC,gBAAgB,EAChBC,cAAc,EACdC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QACjB,kBAAkB;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,aAAa,GAAG;EAClBC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE;AACd,CAAC;AAED,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM;IAACI,QAAQ;IAAEC;EAAQ,CAAC,GAAGG,UAAU;EAEvC,MAAME,eAAe,GAAIC,CAAC,IAAK;IAC3B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACD,IAAI;IAC1B,MAAME,KAAK,GAAGH,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5BL,aAAa,CAAC;MAAC,GAAGD,UAAU;MAAE,CAACI,IAAI,GAAGE;IAAK,CAAC,CAAC;EACjD,CAAC;EAED,MAAMC,OAAO,GAAIX,QAAQ,KAAK,EAAE,IAAIC,QAAQ,KAAK,EAAG;EACtD;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;IACIH,OAAA,CAACc,MAAM;MAAAC,QAAA,eACPf,OAAA,CAACT,WAAW;QAACyB,KAAK,EAAE,OAAQ;QAAAD,QAAA,gBAC5Bf,OAAA,CAACJ,OAAO;UAACqB,IAAI,EAAE,IAAK;UAAAF,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACtCrB,OAAA,CAACR,SAAS;UAAC8B,EAAE,EAAC,MAAM;UAAAP,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACzCrB,OAAA,CAACL,KAAK;UAAC4B,IAAI,EAAC,MAAM;UAACb,IAAI,EAAC,UAAU;UAACE,KAAK,EAAEV,QAAS;UAACsB,QAAQ,EAAEhB,eAAgB;UAACiB,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACzFrB,OAAA,CAACR,SAAS;UAAC8B,EAAE,EAAC,MAAM;UAAAP,QAAA,EAAC;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACzCrB,OAAA,CAACL,KAAK;UAAC4B,IAAI,EAAC,UAAU;UAACb,IAAI,EAAC,UAAU;UAACE,KAAK,EAAET,QAAS;UAACqB,QAAQ,EAAEhB,eAAgB;UAACiB,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC7FrB,OAAA,CAACH,MAAM;UAAC6B,WAAW,EAAC,MAAM;UAACT,IAAI,EAAC,IAAI;UAAAF,QAAA,EAAC;QAErC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;AAEb;AAAChB,EAAA,CApCuBD,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}