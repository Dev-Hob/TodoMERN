{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\ToDoList\\\\to-do-frontend\\\\src\\\\pages\\\\EditToDo.page.jsx\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport useFetch from \"../../hooks/useFetch.hook\";\nimport { Box, Button, Flex, FormControl, FormLabel, Input, Spacer, Spinner, Textarea, useToast } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"../components/navbar/navbar.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditTodo() {\n  _s();\n  const {\n    _id\n  } = useLocation();\n  const navigate = useNavigate();\n  const toast = useToast();\n  const {\n    data,\n    loading,\n    error,\n    retry\n  } = useFetch(`/todo/${_id}`, \"get\");\n  const [formFields, setFormFields] = useState({\n    name: \"\",\n    description: \"\"\n  });\n  const {\n    name,\n    description\n  } = formFields;\n  useEffect(() => {\n    if (data && data !== null && data !== void 0 && data.todo) {\n      setFormFields({\n        name: data.todo.name,\n        description: data.todo.description\n      });\n    }\n  }, [data]);\n  const updateTodoHandler = async () => {\n    try {\n      await instance({\n        url: \"/todo/update\",\n        method: \"patch\",\n        data: {\n          _id,\n          ...formFields\n        }\n      });\n      toast({\n        title: \"Update!\",\n        description: `Todo ${name} updated successfully.`,\n        status: \"success\",\n        duration: 1000,\n        isClosable: true\n      });\n      setTimeout(() => {\n        navigate(\"/todo\");\n      }, 1000);\n    } catch (error) {\n      toast({\n        title: \"Update Failed!\",\n        description: `Todo ${name} failed to update.`,\n        status: \"error\",\n        duration: 2000,\n        isClosable: true\n      });\n    }\n  };\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({\n      ...formFields,\n      [name]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    flexDirection: \"column\",\n    m: \"150px\",\n    mt: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [loading && /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"xl\",\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), data && data !== null && data !== void 0 && data.todo ? /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          name: \"name\",\n          value: name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n          type: \"text\",\n          name: \"description\",\n          value: description,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          onClick: updateTodoHandler,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTodo, \"GfkinYec3vadU/hP9/51s3Z6aBo=\", false, function () {\n  return [useLocation, useNavigate, useToast, useFetch];\n});\n_c = EditTodo;\nvar _c;\n$RefreshReg$(_c, \"EditTodo\");","map":{"version":3,"names":["useLocation","useNavigate","useFetch","Box","Button","Flex","FormControl","FormLabel","Input","Spacer","Spinner","Textarea","useToast","useEffect","useState","Navbar","jsxDEV","_jsxDEV","EditTodo","_s","_id","navigate","toast","data","loading","error","retry","formFields","setFormFields","name","description","todo","updateTodoHandler","instance","url","method","title","status","duration","isClosable","setTimeout","handleInputChange","event","value","target","flexDirection","m","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","size","color","type","onChange","colorScheme","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PC/Desktop/ToDoList/to-do-frontend/src/pages/EditToDo.page.jsx"],"sourcesContent":["import { useLocation, useNavigate } from \"react-router-dom\";\r\nimport useFetch from \"../../hooks/useFetch.hook\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Spacer,\r\n  Spinner,\r\n  Textarea,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Navbar from \"../components/navbar/navbar.component\";\r\n\r\nexport default function EditTodo() {\r\n  const { _id } = useLocation();\r\n  const navigate = useNavigate()\r\n  const toast = useToast();\r\n  const { data, loading, error, retry } = useFetch(`/todo/${_id}`, \"get\");\r\n  const [formFields, setFormFields] = useState({ name: \"\", description: \"\" });\r\n  const { name, description } = formFields;\r\n\r\n  useEffect(() => {\r\n    if (data && data?.todo) {\r\n      setFormFields({\r\n        name: data.todo.name,\r\n        description: data.todo.description,\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  const updateTodoHandler = async () => {\r\n    try {\r\n      await instance({\r\n        url: \"/todo/update\",\r\n        method: \"patch\",\r\n        data: { _id, ...formFields },\r\n      });\r\n      toast({\r\n        title: \"Update!\",\r\n        description: `Todo ${name} updated successfully.`,\r\n        status: \"success\",\r\n        duration: 1000,\r\n        isClosable: true,\r\n      });\r\n      setTimeout(() => {\r\n        navigate(\"/todo\")\r\n      }, 1000)\r\n\r\n    } catch (error) {\r\n      toast({\r\n        title: \"Update Failed!\",\r\n        description: `Todo ${name} failed to update.`,\r\n        status: \"error\",\r\n        duration: 2000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <Flex flexDirection={\"column\"} m={\"150px\"} mt={\"20px\"}>\r\n      <Navbar />\r\n      <Spacer />\r\n      <Box>\r\n        {loading && <Spinner size={\"xl\"} color=\"red\" />}\r\n        {data && data?.todo ? (\r\n          <FormControl>\r\n            <FormLabel>Name</FormLabel>\r\n            <Input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            />\r\n            <FormLabel>description</FormLabel>\r\n            <Textarea\r\n              type=\"text\"\r\n              name=\"description\"\r\n              value={description}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Button colorScheme=\"teal\" onClick={updateTodoHandler}>\r\n              Update\r\n            </Button>\r\n          </FormControl>\r\n        ) : null}\r\n      </Box>\r\n    </Flex>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}